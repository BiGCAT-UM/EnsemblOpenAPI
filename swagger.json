{
    "swagger": "2.0",
    "info": {
        "version": "0.9.0",
        "title": "Ensembl Rest API"
    },
    "consumes":["text/html"],
    "produces": ["application/json"],
    "host": "rest.ensembl.org/",
    "schemes": [
        "http",
        "https"
    ],
  
    "paths": {
	"archive/id": {
            "post": {
                "description": "Retrieve the archived sequence for a set of identifiers.",
		"tags":["Archive"],
		"consumes":["application/json"],
		"produces": ["application/json"],
                "parameters": [ 
		    {
		        "in": "body",
            		"name": "body",
            		"description": "{ \"id\" : array }",
            		"required": true,            		
                        "type": "string",
			"schema": {
				"type": "object",
				"properties":
				{
				"id": {"type": "string"}

				},
				"example": "{ \"id\" : [\"ENSG00000157764\", \"ENSG00000248378\"] }"
				  }
		    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }                  
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "archive/id/{id}": {
            "get": {
                "description": "Uses the given identifier to return the archived sequence.",
		"tags":["Archive"],
		"produces": [
		"application/json",
		"application/xml"
	      ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl Stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSG00000157764"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }                  
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "genetree/id/{id}": {
            "get": {
                "description": "Retrieves a gene tree for a gene tree stable identifier",
		"tags":["Comparative Genomics"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl Stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSGT00390000003602"
                    },
                    {
                        "name": "aligned",
                        "in": "query",
                        "description": "Return the aligned string if true. Otherwise, return the original sequence (no insertions)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cigar_line",
                        "in": "query",
                        "description": "Return the aligned sequence encoded in CIGAR format",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "clusterset_id",
                        "in": "query",
                        "description": "Name of the gene-tree resource being queried. Common values are \"default\" for the standard multi-clade trees (which exclude all non-reference strains) and \"murinae\" for the trees spanning all mouse strains. By default, the most inclusive analysis will be selected",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "compara",
                        "in": "query",
                        "description": "Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nh_format",
                        "in": "query",
                        "description": "The format of a NH (New Hampshire) request.",
                        "required": false,
                        "type": "string",
                        "enum": ["full","display_label_composite","simple","species","species_short_name","ncbi_taxon","ncbi_name","njtree","phylip"]
                    },
                    {
                        "name": "prune_species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prune_taxon",
                        "in": "query",
                        "description": "Prune the tree by taxon",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sequence",
                        "in": "query",
                        "description": "The type of sequence to bring back. Setting it to none results in no sequence being returned",
                        "required": false,
                        "type": "string",
                        "enum": ["none", "cdna", "protein"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "genetree/member/id/{id}" :  {
            "get": {
                "description": "Retrieves the gene tree that contains the gene / transcript / translation stable identifier",
		"tags":["Comparative Genomics"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl Stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSG00000157764"
                    },
                    {
                        "name": "aligned",
                        "in": "query",
                        "description": "Return the aligned string if true. Otherwise, return the original sequence (no insertions)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cigar_line",
                        "in": "query",
                        "description": "Return the aligned sequence encoded in CIGAR format",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "clusterset_id",
                        "in": "query",
                        "description": "Name of the gene-tree resource being queried. Common values are \"default\" for the standard multi-clade trees (which exclude all non-reference strains) and \"murinae\" for the trees spanning all mouse strains. By default, the most inclusive analysis will be selected",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "compara",
                        "in": "query",
                        "description": "Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nh_format",
                        "in": "query",
                        "description": "The format of a NH (New Hampshire) request.",
                        "required": false,
                        "type": "string",
                        "enum": ["full","display_label_composite","simple","species","species_short_name","ncbi_taxon","ncbi_name","njtree","phylip"]
                    },
                    {
                        "name": "object_type",
                        "in": "query",
                        "description": "Filter by feature type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prune_species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prune_taxon",
                        "in": "query",
                        "description": "Prune the tree by taxon",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sequence",
                        "in": "query",
                        "description": "The type of sequence to bring back. Setting it to none results in no sequence being returned",
                        "required": false,
                        "type": "string",
                        "enum": ["none", "cdna", "protein"]
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "genetree/member/symbol/{species}/{symbol}":  {
            "get": {
                "description": "Retrieves the gene tree that contains the gene identified by a symbol",
		"tags":["Comparative Genomics"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "symbol",
                        "in": "path",
                        "description": "Symbol or display name of a gene",
                        "required": true,
                        "type": "string",
			"default": "BRCA2"
                    },
                    {
                        "name": "aligned",
                        "in": "query",
                        "description": "Return the aligned string if true. Otherwise, return the original sequence (no insertions)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cigar_line",
                        "in": "query",
                        "description": "Return the aligned sequence encoded in CIGAR format",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "clusterset_id",
                        "in": "query",
                        "description": "Name of the gene-tree resource being queried. Common values are \"default\" for the standard multi-clade trees (which exclude all non-reference strains) and \"murinae\" for the trees spanning all mouse strains. By default, the most inclusive analysis will be selected",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "compara",
                        "in": "query",
                        "description": "Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "external_db",
                        "in": "query",
                        "description": "Filter by external database",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nh_format",
                        "in": "query",
                        "description": "The format of a NH (New Hampshire) request.",
                        "required": false,
                        "type": "string",
                        "enum": ["full","display_label_composite","simple","species","species_short_name","ncbi_taxon","ncbi_name","njtree","phylip"]
                    },
                    {
                        "name": "object_type",
                        "in": "query",
                        "description": "Filter by feature type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prune_species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prune_taxon",
                        "in": "query",
                        "description": "Prune the tree by taxon",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sequence",
                        "in": "query",
                        "description": "The type of sequence to bring back. Setting it to none results in no sequence being returned",
                        "required": false,
                        "type": "string",
                        "enum": ["none", "cdna", "protein"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "alignment/region/{species}/{region}":  {
            "get": {
                "description": "Retrieves genomic alignments as separate blocks based on a region and species",
		"tags":["Comparative Genomics"],
		"produces": ["application/json","application/xml"],
                "parameters": [
		    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Query region. A maximum of 10Mb is allowed to be requested at any one time",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "aligned",
                        "in": "query",
                        "description": "Return the aligned string if true. Otherwise, return the original sequence (no insertions)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "compact",
                        "in": "query",
                        "description": "Applicable to EPO_LOW_COVERAGE alignments. If true, concatenate the low coverage species sequences together to create a single sequence. Otherwise, separates out all sequences.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "compara",
                        "in": "query",
                        "description": "Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "display_species_set",
                        "in": "query",
                        "description": "Subset of species in the alignment to be displayed (multiple values). All the species in the alignment will be displayed if this is not set. Any valid alias may be used..",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mask",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string",
                        "enum": ["hard", "soft"]
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "The alignment method",
                        "required": false,
                        "type": "string",
                        "enum": ["EPO","EPO_LOW_COVERAGE","PECAN","LASTZ_NET","BLASTZ_NET","TRANSLATED_BLAT_NET","CACTUS_HAL"]
                    },
                    {
                        "name": "species_set",
                        "in": "query",
                        "description": "The set of species used to define the pairwise alignment (multiple values). Should not be used with the species_set_group parameter. Use /info/compara/species_sets/:method with one of the methods listed above to obtain a valid list of species sets. Any valid alias may be used.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species_set_group",
                        "in": "query",
                        "description": "The species set group name of the multiple alignment. Should not be used with the species_set parameter. Use /info/compara/species_sets/:method with one of the methods listed above to obtain a valid list of group names.",
                        "required": false,
                        "type": "string"
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "homology/id/{id}":  {
            "get": {
                "description": "Retrieves genomic alignments as separate blocks based on a region and species",
		"tags":["Comparative Genomics"],
		"produces": ["application/json","application/xml"],
                "parameters": [
		    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl Stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSG00000157764"
                    },
                    {
                        "name": "aligned",
                        "in": "query",
                        "description": "Return the aligned string if true. Otherwise, return the original sequence (no insertions)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cigar_line",
                        "in": "query",
                        "description": "Return the aligned sequence encoded in CIGAR format",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "compara",
                        "in": "query",
                        "description": "Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Layout of the response",
                        "required": false,
                        "type": "string",
                        "enum": ["full", "condensed"]
                    },
                    {
                        "name": "sequence",
                        "in": "query",
                        "description": "The type of sequence to bring back. Setting it to none results in no sequence being returned",
                        "required": false,
                        "type": "string",
                        "enum": ["none", "cdna", "protein"]
                    },
                    {
                        "name": "target_species",
                        "in": "query",
                        "description": "Filter by species. Supports all species aliases",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "target_taxon",
                        "in": "query",
                        "description": "Filter by taxons",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service",
                        "required": false,
                        "type": "string",
                        "enum": ["orthologues","paralogues","projections","all"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "homology/symbol/{species}/{symbol}":  {
            "get": {
                "description": "Retrieves genomic alignments as separate blocks based on a region and species",
		"tags":["Comparative Genomics"],
		"produces": ["application/json","application/xml"],
                "parameters": [
		    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "symbol",
                        "in": "path",
                        "description": "Symbol or display name of a gene",
                        "required": true,
                        "type": "string",
			"default": "BRCA2"
                    },
                    {
                        "name": "aligned",
                        "in": "query",
                        "description": "Return the aligned string if true. Otherwise, return the original sequence (no insertions)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cigar_line",
                        "in": "query",
                        "description": "Return the aligned sequence encoded in CIGAR format",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "compara",
                        "in": "query",
                        "description": "Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "external_db",
                        "in": "query",
                        "description": "Filter by external database",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Layout of the response",
                        "required": false,
                        "type": "string",
                        "enum": ["full", "condensed"]
                    },
                    {
                        "name": "sequence",
                        "in": "query",
                        "description": "The type of sequence to bring back. Setting it to none results in no sequence being returned",
                        "required": false,
                        "type": "string",
                        "enum": ["none", "cdna", "protein"]
                    },
                    {
                        "name": "target_species",
                        "in": "query",
                        "description": "Filter by species. Supports all species aliases",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "target_taxon",
                        "in": "query",
                        "description": "Filter by taxons",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service",
                        "required": false,
                        "type": "string",
                        "enum": ["orthologues","paralogues","projections","all"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "xrefs/id/{id}": {
            "get": {
                "description": "Perform lookups of Ensembl Identifiers and retrieve their external references in other databases",
		"tags":["Cross References"],
		"produces": [
		"application/json",
		"application/xml"
	      ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl Stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSG00000157764"
                    },
                    {
                        "name": "all_levels",
                        "in": "query",
                        "description": "Set to find all genetic features linked to the stable ID, and fetch all external references for them. Specifying this on a gene will also return values from its transcripts and translations",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "external_db",
                        "in": "query",
                        "description": "Filter by external database",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "object_type",
                        "in": "query",
                        "description": "Filter by feature type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "xrefs/symbol/{species}/{symbol}": {
            "get": {
                "description": "Looks up an external symbol and returns all Ensembl objects linked to it. This can be a display name for a gene/transcript/translation, a synonym or an externally linked reference. If a gene's transcript is linked to the supplied symbol the service will return both gene and transcript (it supports transient links).",
		"tags":["Cross References"],
		"produces": [
		"application/json",
		"application/xml"
	      ],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "symbol",
                        "in": "path",
                        "description": "Symbol or display name of a gene",
                        "required": true,
                        "type": "string",
			"default": "BRCA2"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "external_db",
                        "in": "query",
                        "description": "Filter by external database",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "object_type",
                        "in": "query",
                        "description": "Filter by feature type",
                        "required": false,
                        "type": "string"
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "xrefs/name/{species}/{name}": {
            "get": {
                "description": "Performs a lookup based upon the primary accession or display label of an external reference and returning the information we hold about the entry.",
		"tags":["Cross References"],
		"produces": [
		"application/json",
		"application/xml"
	      ],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Symbol or display name of a gene",
                        "required": true,
                        "type": "string",
			"default": "BRCA2"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "external_db",
                        "in": "query",
                        "description": "Filter by external database",
                        "required": false,
                        "type": "string"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "eqtl/id/{species}/{stable_id}": {
            "get": {
                "description": "Returns the p-value for each SNP in a given gene (e.g. ENSG00000227232)",
		"tags":["EQTL"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "stable_id",
                        "in": "path",
                        "description": "Ensembl stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSG00000122435"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "statistic",
                        "in": "query",
                        "description": "Filter by statistic",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tissue",
                        "in": "query",
                        "description": "Tissue of interest [Stomach, Thyroid, Whole_Blood]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "variant_name",
                        "in": "query",
                        "description": "rsID (Reference SNP cluster ID)",
                        "required": false,
                        "type": "string"
                    }                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "eqtl/variant_name/{species}/{variant_name}": {
            "get": {
                "description": "Returns the p-values for a SNP (e.g. rs123)",
		"tags":["EQTL"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "variant_name",
                        "in": "path",
                        "description": "rsID (Reference SNP cluster ID)",
                        "required": true,
                        "type": "string",
			"default": "rs17438086"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Ensembl stable ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "statistic",
                        "in": "query",
                        "description": "Filter by statistic",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tissue",
                        "in": "query",
                        "description": "Tissue of interest [Stomach, Thyroid, Whole_Blood]",
                        "required": false,
                        "type": "string"
                    }         
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "eqtl/tissue/{species}": {
            "get": {
                "description": "Returns all tissues currently available in the DB",
		"tags":["EQTL"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }        
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/analysis/{species}": {
            "get": {
                "description": "List the names of analyses involved in generating Ensembl data.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }        
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/assembly/{species}": {
            "get": {
                "description": "List the currently available assemblies for a species, along with toplevel sequences, chromosomes and cytogenetic bands.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "bands",
                        "in": "query",
                        "description": "If set to 1, include karyotype band information. Only display if band information is available.",
                        "required": false,
                        "type": "boolean"
                    }, 
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }        
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/assembly/{species}/{region_name}": {
            "get": {
                "description": "Returns information about the specified toplevel sequence region for the given species.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "region_name",
                        "in": "path",
                        "description": "The (top level) sequence region name..",
                        "required": true,
                        "type": "string",
			"default": "X"
                    },
                    {
                        "name": "bands",
                        "in": "query",
                        "description": "If set to 1, include karyotype band information. Only display if band information is available.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }        
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/biotypes/{species}": {
            "get": {
                "description": "List the functional classifications of gene models that Ensembl associates with a particular species. Useful for restricting the type of genes/transcripts retrieved by other endpoints.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }        
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/compara/methods": {
            "get": {
                "description": "List all compara analyses available (an analysis defines the type of comparative data).",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "class",
                        "in": "query",
                        "description": "The class of the method to query for. Regular expression patterns are supported.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "compara",
                        "in": "query",
                        "description": "Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/compara/species_sets/{method}": {
            "get": {
                "description": "List all collections of species analysed with the specified compara method.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
		    {
                        "name": "method",
                        "in": "path",
                        "description": "Filter by compara method. Use one the methods returned by /info/compara/methods endpoint.",
                        "required": true,
                        "type": "string",
			"default": "EPO"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "compara",
                        "in": "query",
                        "description": "Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/comparas": {
            "get": {
                "description": "Lists all available comparative genomics databases and their data release.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/data": {
            "get": {
                "description": "Shows the data releases available on this REST server. May return more than one release (unfrequent non-standard Ensembl configuration).",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/external_dbs/{species}": {
            "get": {
                "description": "Lists all available external sources for a species.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feature",
                        "in": "query",
                        "description": "Only return external DB entries for a given feature.",
                        "required": false,
                        "type": "string",
                        "enum": ["dna_align_feature","protein_align_feature","unmapped_object","xref","seq_region_synonym"]
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Restrict external DB searches to a single source or pattern. SQL-LIKE patterns are supported.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/ping": {
            "get": {
                "description": "Checks if the service is alive.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/rest": {
            "get": {
                "description": "Shows the current version of the Ensembl REST API.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/software": {
            "get": {
                "description": "Shows the current version of the Ensembl API used by the REST server.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/species": {
            "get": {
                "description": "Lists all available species, their aliases, available adaptor groups and data release.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "division",
                        "in": "query",
                        "description": "Filter by Ensembl or Ensembl Genomes division.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hide_strain_info",
                        "in": "query",
                        "description": "Show/hide strain and strain_collection info in the output",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "strain_collection",
                        "in": "query",
                        "description": "Filter by strain_collection.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/variation/{species}": {
            "get": {
                "description": "List the variation sources used in Ensembl for a species.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Restrict external DB searches to a single source or pattern. SQL-LIKE patterns are supported.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "info/variation/populations/{species}": {
            "get": {
                "description": "List all populations for a species.",
		"tags":["Information"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Restrict external DB searches to a single source or pattern. SQL-LIKE patterns are supported.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "ld/{species}/{id}": {
            "get": {
                "description": "Computes and returns LD values between the given variant and all other variants in a window centered around the given variant. The window size is set to 500 kb.",
		"tags":["Linkage Disequilibrium"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Variant id",
                        "required": true,
                        "type": "string",
			"default": "rs1042779"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "d_prime",
                        "in": "query",
                        "description": "Measure of LD. If D' is provided only return pairs of variants whose D' value is equal to or greater than the value provided.",
                        "required": false,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "population_name",
                        "in": "query",
                        "description": "Only compute LD for this population. Use GET /info/variation/populations/:species?filter=LD to retrieve a list of all populations with LD data.",
                        "required": false,
                        "type": "string",
                        "default": "1000GENOMES:phase_3:KHV"
                    },
                    {
                        "name": "r2",
                        "in": "query",
                        "description": "Measure of LD. If r-squared is provided only return pairs of variants whose r-squared value is equal to or greater than the value provided.",
                        "required": false,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "window_size",
                        "in": "query",
                        "description": "Window size in kb. The maximum allowed value for the window size is 500 kb. LD is computed for the given variant and all variants that are located within the specified window.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "ld/{species}/pairwise/{id1}/{id2}": {
            "get": {
                "description": "Computes and returns LD values between the given variants.",
		"tags":["Linkage Disequilibrium"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "id1",
                        "in": "path",
                        "description": "Variant id",
                        "required": true,
                        "type": "string",
			"default": "rs6792369"
                    },
                    {
                        "name": "id2",
                        "in": "path",
                        "description": "Variant id",
                        "required": true,
                        "type": "string",
			"default": "rs1042779"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "d_prime",
                        "in": "query",
                        "description": "Measure of LD. If D' is provided only return pairs of variants whose D' value is equal to or greater than the value provided.",
                        "required": false,
                        "type": "float"
                    },
                    {
                        "name": "population_name",
                        "in": "query",
                        "description": "Only compute LD for this population. Use GET /info/variation/populations/:species?filter=LD to retrieve a list of all populations with LD data.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "r2",
                        "in": "query",
                        "description": "Measure of LD. If r-squared is provided only return pairs of variants whose r-squared value is equal to or greater than the value provided.",
                        "required": false,
                        "type": "number",
                        "format": "float"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "ld/{species}/region/{region}": {
            "get": {
                "description": "Computes and returns LD values between all pairs of variants in the defined region.",
		"tags":["Linkage Disequilibrium"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Query region. A maximum of 10Mb is allowed to be requested at any one time",
                        "required": true,
                        "type": "string",
                        "default": "6:25837556..25843455"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "d_prime",
                        "in": "query",
                        "description": "Measure of LD. If D' is provided only return pairs of variants whose D' value is equal to or greater than the value provided.",
                        "required": false,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "population_name",
                        "in": "query",
                        "description": "Only compute LD for this population. Use GET /info/variation/populations/:species?filter=LD to retrieve a list of all populations with LD data.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "r2",
                        "in": "query",
                        "description": "Measure of LD. If r-squared is provided only return pairs of variants whose r-squared value is equal to or greater than the value provided.",
                        "required": false,
                        "type": "number",
                        "format": "float"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "lookup/id/{id}": {
            "get": {
                "description": "Find the species and database for a single identifier e.g. gene, transcript, protein.",
		"tags":["Lookup"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSG00000157764"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expands the search to include any connected features. e.g. If the object is a gene, its transcripts, translations and exons will be returned as well.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Layout of the response",
                        "required": false,
                        "type": "string",
                        "enum": ["full", "condensed"]
                    },
                    {
                        "name": "phenotypes",
                        "in": "query",
                        "description": "Include phenotypes. Only available for gene objects.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "utr",
                        "in": "query",
                        "description": "Include 5' and 3' UTR features. Only available if the expand option is used.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "lookup/id/": {
            "post": {
                "description": "Find the species and database for several identifiers. IDs that are not found are returned with no data.",
		"tags":["Lookup"],
		"produces": ["application/json","application/xml"],
                "parameters": [
		    {
		        "in": "body",
            		"name": "body",
            		"description": "{ \"ids\" : array }",
            		"required": true,            		
                        "type": "string",
			"schema": {
				"type": "string",
				"properties":
				{
				"id": {"type": "string"}

				},
				"example": "{ \"ids\" : [\"ENSG00000157764\", \"ENSG00000248378\"] }"
				  }
		    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expands the search to include any connected features. e.g. If the object is a gene, its transcripts, translations and exons will be returned as well.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Layout of the response",
                        "required": false,
                        "type": "string",
                        "enum": ["full", "condensed"]
                    },
                    {
                        "name": "object_type",
                        "in": "query",
                        "description": "Filter by feature type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "lookup/symbol/{species}/{symbol}": {
            "get": {
                "description": "Find the species and database for a symbol in a linked external database.",
		"tags":["Lookup"],
		"produces": ["application/json","application/xml"],
                "parameters": [ 
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "symbol",
                        "in": "path",
                        "description": "Symbol or display name of a gene",
                        "required": true,
                        "type": "string",
			"default": "BRCA2"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expands the search to include any connected features. e.g. If the object is a gene, its transcripts, translations and exons will be returned as well.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Layout of the response",
                        "required": false,
                        "type": "string",
                        "enum": ["full", "condensed"]
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "lookup/symbol/{species}": {
            "post": {
                "description": "Find the species and database for a set of symbols in a linked external database. Unknown symbols are omitted from the response.",
		"tags":["Lookup"],
		"produces": ["application/json","application/xml"],
                "parameters": [
		    {
		        "in": "body",
            		"name": "body",
            		"description": "{ \"symbols\" : array }",
            		"required": true,            		
                        "type": "string",
			"schema": {
				"type": "string",
				"properties":
				{
				"symbols": {"type": "string"}

				},
				"example": "{ \"symbols\" : [\"BRCA2\", \"BRAF\"] }"
				  }
		    }, 
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expands the search to include any connected features. e.g. If the object is a gene, its transcripts, translations and exons will be returned as well.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Layout of the response",
                        "required": false,
                        "type": "string",
                        "enum": ["full", "condensed"]
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "map/cdna/{id}/{region}": {
            "get": {
                "description": "Convert from cDNA coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API.",
		"tags":["Mapping"],
		"produces": ["application/json","application/xml"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENST00000288602"
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Query region",
                        "required": true,
                        "type": "string",
			"default": "100..300"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_original_region",
                        "in": "query",
                        "description": "Include original input region (cDNA coordinates) along with the target region (genomic coordinates) mappings.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "map/cds/{id}/{region}": {
            "get": {
                "description": "Convert from CDS coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API.",
		"tags":["Mapping"],
		"produces": ["application/json","application/xml"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENST00000288602"
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Query region",
                        "required": true,
                        "type": "string",
			"default": "100..300"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_original_region",
                        "in": "query",
                        "description": "Include original input region (cDNA coordinates) along with the target region (genomic coordinates) mappings.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "map/{species}/{asm_one}/{region}/{asm_two}": {
            "get": {
                "description": "Convert from CDS coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API.",
		"tags":["Mapping"],
		"produces": ["application/json","application/xml"],
                "parameters": [
                    {
                        "name": "asm_one",
                        "in": "path",
                        "description": "Version of the input assembly",
                        "required": true,
                        "type": "string",
			"default": "GRCh37"
                    },
                    {
                        "name": "asm_two",
                        "in": "path",
                        "description": "Version of the output assembly",
                        "required": true,
                        "type": "string",
			"default": "GRCh38"
                    }, 
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Query region",
                        "required": true,
                        "type": "string",
			"default": "X:1000000..1000100:1"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "coord_system",
                        "in": "query",
                        "description": "Name of the input coordinate system",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "target_coord_system",
                        "in": "query",
                        "description": "Name of the output coordinate system",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "map/translation/{id}/{region}": {
            "get": {
                "description": "Convert from protein (translation) coordinates to genomic coordinates. Output reflects forward orientation coordinates as returned from the Ensembl API.",
		"tags":["Mapping"],
		"produces": ["application/json","application/xml"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSP00000288602"
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Query region",
                        "required": true,
                        "type": "string",
			"default": "100..300"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "ontology/ancestors/{id}": {
            "get": {
                "description": "Reconstruct the entire ancestry of a term from is_a and part_of relationships.",
		"tags":["Ontologies and Taxonomy"],
		"produces": ["application/json","application/xml"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An ontology term identifier",
                        "required": true,
                        "type": "string",
			"default": "GO:0005667",
			"schema": {
				"type": "string",				
				"example": "GO:0005667"
				  }
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ontology",
                        "in": "query",
                        "description": "Filter by ontology. Used to disambiguate terms which are shared between ontologies such as GO and EFO",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
       "ontology/ancestors/chart/{id}": {
            "get": {
                "description": "Reconstruct the entire ancestry of a term from is_a and part_of relationships.",
		"tags":["Ontologies and Taxonomy"],
		"produces":["text/xml","application/json"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An ontology term identifier",
                        "required": true,
                        "type": "string",
			"default": "GO:0005667",
			"schema": {
				"type": "string",				
				"example": "GO:0005667"
				  }
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ontology",
                        "in": "query",
                        "description": "Filter by ontology. Used to disambiguate terms which are shared between ontologies such as GO and EFO",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
       "ontology/descendants/{id}": {
            "get": {
                "description": "Find all the terms descended from a given term. By default searches are conducted within the namespace of the given identifier.",
		"tags":["Ontologies and Taxonomy"],
		"produces":["text/xml","application/json"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An ontology term identifier",
                        "required": true,
                        "type": "string",
			"default": "GO:0005667",
			"schema": {
				"type": "string",				
				"example": "GO:0005667"
				  }
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "closest_term",
                        "in": "query",
                        "description": "If true return only the closest terms to the specified term",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ontology",
                        "in": "query",
                        "description": "Filter by ontology. Used to disambiguate terms which are shared between ontologies such as GO and EFO",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subset",
                        "in": "query",
                        "description": "Filter terms by the specified subset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zero_distance",
                        "in": "query",
                        "description": "Return terms with a distance of 0",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
       "ontology/id/{id}": {
            "get": {
                "description": "Search for an ontological term by its namespaced identifier.",
		"tags":["Ontologies and Taxonomy"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An ontology term identifier",
                        "required": true,
                        "type": "string",
			"default": "GO:0005667",
			"schema": {
				"type": "string",				
				"example": "GO:0005667"
				  }
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ontology",
                        "in": "query",
                        "description": "Filter by ontology. Used to disambiguate terms which are shared between ontologies such as GO and EFO",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "relation",
                        "in": "query",
                        "description": "The types of relationships to include in the output. Fetches all relations by default",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simple",
                        "in": "query",
                        "description": "If set the API will avoid the fetching of parent and child terms",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml","text/x-yaml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
       "ontology/name/{name}": {
            "get": {
                "description": "Search for an ontological term by its namespaced identifier.",
		"tags":["Ontologies and Taxonomy"],
                "parameters": [ 
                    {
                        "name": "name",
                        "in": "path",
                        "description": "An ontology name. SQL wildcards are supported",
                        "required": true,
                        "type": "string",
			"schema": {
				  "$ref": "#/definitions/OntologyName"
				  }
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "relation",
                        "in": "query",
                        "description": "The types of relationships to include in the output. Fetches all relations by default",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simple",
                        "in": "query",
                        "description": "If set the API will avoid the fetching of parent and child terms",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml","text/x-yaml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
       "taxonomy/classification/{id}": {
            "get": {
                "description": "Return the taxonomic classification of a taxon node.",
		"tags":["Ontologies and Taxonomy"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A taxon identifier. Can be a NCBI taxon id or a name",
                        "required": true,
                        "type": "string",
			"default": "9606"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simple",
                        "in": "query",
                        "description": "If set the API will avoid the fetching of parent and child terms",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml","text/x-yaml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
       "taxonomy/id/{id}": {
            "get": {
                "description": "Search for a taxonomic term by its identifier or name.",
		"tags":["Ontologies and Taxonomy"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A taxon identifier. Can be a NCBI taxon id or a name",
                        "required": true,
                        "type": "string",
			"default": "9606"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml","text/x-yaml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
       "taxonomy/name/{name}": {
            "get": {
                "description": "Search for a taxonomic id by a non-scientific name.",
		"tags":["Ontologies and Taxonomy"],
                "parameters": [ 
                    {
                        "name": "name",
                        "in": "path",
                        "description": "A non-scientific species name. Can include SQL wildcards",
                        "required": true,
                        "type": "string",
			"default": "Homo"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml","text/x-yaml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
       "overlap/id/{id}": {
            "get": {
                "description": "Retrieves features (e.g. genes, transcripts, variants and more) that overlap a region defined by the given identifier.",
		"tags":["Overlap"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSG00000157764"
                    },
                    {
                        "name": "feature",
                        "in": "query",
                        "description": "The type of feature to retrieve. Multiple values are accepted.",
                        "required": true,
                        "type": "array",
                        "collectionFormat":"csv",
                        "enum": ["band","gene","transcript","cds","exon","repeat","simple","misc","variation","somatic_variation","structural_variation","somatic_structural_variation","constrained","regulatory","motif","chipseq","array_prob"]
                    },
                    {
                        "name": "biotype",
                        "in": "query",
                        "description": "The functional classification of the gene or transcript to fetch. Cannot be used in conjunction with logic_name when querying transcripts.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logic_name",
                        "in": "query",
                        "description": "Limit retrieval of genes, transcripts and exons by a given name of an analysis.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "misc_set",
                        "in": "query",
                        "description": "Miscellaneous set which groups together feature entries. Consult the DB or returned data sets to discover what is available.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "object_type",
                        "in": "query",
                        "description": "Filter by feature type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "so_term",
                        "in": "query",
                        "description": "Sequence Ontology term to narrow down the possible variants returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species_set",
                        "in": "query",
                        "description": "Filter by species set for retrieving constrained elements.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "variant_set",
                        "in": "query",
                        "description": "Short name of a set to restrict the variants found. (See list of short set names)[http://www.ensembl.org/info/genome/variation/data_description.html#variation_sets]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "overlap/region/{species}/{region}": {
            "get": {
                "description": "Retrieves features (e.g. genes, transcripts, variants and more) that overlap a given region.",
		"tags":["Overlap"],
                "parameters": [
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "homo_sapiens"
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Query region. A maximum of 5Mb is allowed to be requested at any one time",
                        "required": true,
                        "type": "string",
                        "default": "7:140424943-140624564"
                    },
                    {
                        "name": "feature",
                        "in": "query",
                        "description": "The type of feature to retrieve. Multiple values are accepted.",
                        "required": true,
                        "type": "array",
                        "collectionFormat":"csv",
                        "enum": ["band","gene","transcript","cds","exon","repeat","simple","misc","variation","somatic_variation","structural_variation","somatic_structural_variation","constrained","regulatory","motif","chipseq","array_prob"]
                    },
                    {
                        "name": "biotype",
                        "in": "query",
                        "description": "The functional classification of the gene or transcript to fetch. Cannot be used in conjunction with logic_name when querying transcripts.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logic_name",
                        "in": "query",
                        "description": "Limit retrieval of genes, transcripts and exons by a given name of an analysis.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "misc_set",
                        "in": "query",
                        "description": "Miscellaneous set which groups together feature entries. Consult the DB or returned data sets to discover what is available.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "so_term",
                        "in": "query",
                        "description": "Sequence Ontology term to narrow down the possible variants returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species_set",
                        "in": "query",
                        "description": "Filter by species set for retrieving constrained elements.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "variant_set",
                        "in": "query",
                        "description": "Short name of a set to restrict the variants found. (See list of short set names)[http://www.ensembl.org/info/genome/variation/data_description.html#variation_sets]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "trim_downstream",
                        "in": "query",
                        "description": "Do not return features which overlap the downstream end of the region.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "trim_upstream",
                        "in": "query",
                        "description": "Do not return features which overlap upstream end of the region.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "overlap/translation/{id}": {
            "get": {
                "description": "Retrieve features related to a specific Translation as described by its stable ID (e.g. domains, variants).",
		"tags":["Overlap"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSP00000288602"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "so_term",
                        "in": "query",
                        "description": "Sequence Ontology term to narrow down the possible variants returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feature",
                        "in": "query",
                        "description": "The type of feature to retrieve. Multiple values are accepted.",
                        "required": false,
                        "type": "array",
                        "collectionFormat":"csv",
                        "enum": ["transcript_variation","protein_feature","residue_overlap","translation_exon","somatic_transcript_variatio"]
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of data to filter by. By default, all features are returned. Can specify a domain or consequence type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "/phenotype/accession/{species}/{accession}": {
            "get": {
                "description": "Return phenotype annotations for genomic features given a phenotype ontology accession.",
		"tags":["Phenotype annotations"],
                "parameters": [ 
                    {
                        "name": "accession",
                        "in": "path",
                        "description": "phenotype ontology accession",
                        "required": true,
                        "type": "string",
			"default": "EFO:0003900"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_children",
                        "in": "query",
                        "description": "Include annotations attached to child terms",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Restrict to annotations from a specific source..",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "/phenotype/term/{species}/{term}": {
            "get": {
                "description": "Return phenotype annotations for genomic features given a phenotype ontology term.",
		"tags":["Phenotype annotations"],
                "parameters": [ 
                    {
                        "name": "term",
                        "in": "path",
                        "description": "phenotype ontology term",
                        "required": true,
                        "type": "string",
			"default": "coffee consumption"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "include_children",
                        "in": "query",
                        "description": "Include annotations attached to child terms",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Restrict to annotations from a specific source..",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "regulatory/{species}/{id}": {
            "get": {
                "description": "Returns a RegulatoryFeature given its stable ID (e.g. ENSR00000099113).",
		"tags":["Regulation"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "RegulatoryFeature stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSR00000099113"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "sequence/id/{id}": {
            "get": {
                "description": "Request multiple types of sequence by stable identifier. Supports feature masking and expand options.",
		"tags":["Sequence"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl stable ID",
                        "required": true,
                        "type": "string",
			"default": "ENSG00000157764"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Trim the end of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "expand_3prime",
                        "in": "query",
                        "description": "Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "expand_5prime",
                        "in": "query",
                        "description": "Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "string",
                        "enum": ["fasta"]
                    },
                    {
                        "name": "mark",
                        "in": "query",
                        "description": "Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic sequence type..",
                        "required": false,
                        "type": "string",
                        "enum": ["hard","soft"]
                    },
                    {
                        "name": "mask_feature",
                        "in": "path",
                        "description": "Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "multiple_sequences",
                        "in": "path",
                        "description": "Allow the service to return more than 1 sequence per identifier. This is useful when querying for a gene but using a type such as protein.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "object_type ",
                        "in": "path",
                        "description": "Filter by feature type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Trim the start of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of sequence. Defaults to genomic where applicable, i.e. not translations. cdna refers to the spliced transcript sequence with UTR; cds refers to the spliced transcript sequence without UTR.",
                        "required": false,
                        "type": "string",
                        "enum": ["genomic","cds","cdna","protein"]
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml","text/x-fasta"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "sequence/id": {
            "post": {
                "description": "Request multiple types of sequence by a stable identifier list.",
		"tags":["Sequence"],
                "parameters": [ 
		    {
		        "in": "body",
            		"name": "body",
            		"description": "{ \"ids\" : array }",
            		"required": true,            		
                        "type": "string",
			"schema": {
				"type": "string",
				"properties":
				{
				"id": {"type": "string"}

				},
				"example": "{ \"ids\" : [\"ENSG00000157764\", \"ENSG00000248378\"] }"
				  }
		    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "db_type",
                        "in": "query",
                        "description": "Restrict the search to a database other than the default. Useful if you need to use a DB other than core",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Trim the end of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "expand_3prime",
                        "in": "query",
                        "description": "Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "expand_5prime",
                        "in": "query",
                        "description": "Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "string",
                        "enum": ["fasta"]
                    },
                    {
                        "name": "mark",
                        "in": "query",
                        "description": "Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic sequence type..",
                        "required": false,
                        "type": "string",
                        "enum": ["hard","soft"]
                    },
                    {
                        "name": "mask_feature",
                        "in": "path",
                        "description": "Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "object_type ",
                        "in": "path",
                        "description": "Filter by feature type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Trim the start of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of sequence. Defaults to genomic where applicable, i.e. not translations. cdna refers to the spliced transcript sequence with UTR; cds refers to the spliced transcript sequence without UTR.",
                        "required": false,
                        "type": "string",
                        "enum": ["genomic","cds","cdna","protein"]
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml","text/x-fasta"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "sequence/region/{species}/{region}": {
            "get": {
                "description": "Returns the genomic sequence of the specified region of the given species. Supports feature masking and expand options.",
		"tags":["Sequence"],
                "parameters": [ 
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Query region. A maximum of 10Mb is allowed to be requested at any one time",
                        "required": true,
                        "type": "string",
			"default": "X:1000000..1000100:1"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "coord_system",
                        "in": "query",
                        "description": "Filter by coordinate system name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "coord_system_version",
                        "in": "query",
                        "description": "Filter by coordinate system version",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand_3prime",
                        "in": "query",
                        "description": "Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "expand_5prime",
                        "in": "query",
                        "description": "Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "string",
                        "enum": ["fasta"]
                    },
                    {
                        "name": "mark",
                        "in": "query",
                        "description": "Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic sequence type..",
                        "required": false,
                        "type": "string",
                        "enum": ["hard","soft"]
                    },
                    {
                        "name": "mask_feature",
                        "in": "path",
                        "description": "Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml","text/x-fasta"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "sequence/region/{species}": {
            "post": {
                "description": "Request multiple types of sequence by a stable identifier list.",
		"tags":["Sequence"],
                "parameters": [ 
		    {
		        "in": "body",
            		"name": "body",
            		"description": "{ \"regions\" : array }",
            		"required": true,            		
                        "type": "string",
			"schema": {
				"type": "string",
				"properties":
				{
				"regions": {"type": "string"}

				},
				"example": "{ \"regions\" : [\"X:1000000..1000100:1\", \"ABBA01004489.1:1..100\"] }"
				  }
		    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "coord_system",
                        "in": "query",
                        "description": "Filter by coordinate system name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "coord_system_version",
                        "in": "query",
                        "description": "Filter by coordinate system version",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expand_3prime",
                        "in": "query",
                        "description": "Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "expand_5prime",
                        "in": "query",
                        "description": "Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.",
                        "required": false,
                        "type": "string",
                        "enum": ["fasta"]
                    },
                    {
                        "name": "mark",
                        "in": "query",
                        "description": "Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic sequence type..",
                        "required": false,
                        "type": "string",
                        "enum": ["hard","soft"]
                    },
                    {
                        "name": "mask_feature",
                        "in": "path",
                        "description": "Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml","text/x-fasta"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "transcript_haplotypes/{species}/{id}": {
            "get": {
                "description": "Computes observed transcript haplotype sequences based on phased genotype data.",
		"tags":["Transcript Haplotypes"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transcript stable id",
                        "required": true,
                        "type": "string",
			"default": "ENST00000288602"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "aligned_sequences",
                        "in": "query",
                        "description": "Include aligned sequences used to generate differences",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "samples",
                        "in": "query",
                        "description": "Include sample-haplotype assignments",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sequence",
                        "in": "query",
                        "description": "Include raw sequences",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "vep/{species}/id/{id}": {
            "get": {
                "description": "Fetch variant consequences based on a HGVS notation.",
		"tags":["VEP"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Query ID. Supports dbSNP, COSMIC and HGMD identifiers",
                        "required": true,
                        "type": "string",
			"default": "rs56116432"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "Blosum62",
                        "in": "query",
                        "description": "Include BLOSUM62 amino acid conservation score [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "CSN",
                        "in": "query",
                        "description": "Reports Clinical Sequencing Nomenclature (CSN) for variants [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CSN.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Conservation",
                        "in": "query",
                        "description": "Retrieves a conservation score from the Ensembl Compara databases for variant positions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Conservation.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "GeneSplicer",
                        "in": "query",
                        "description": "Detects splice sites in genomic DNA [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "MaxEntScan",
                        "in": "query",
                        "description": "Sequence motif and maximum entropy based splice site consensus predictions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UpDownDistance",
                        "in": "query",
                        "description": "Change the distance to transcript for which VEP assigns upstream and downstream consequences [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/UpDownDistance.pm)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "canonical",
                        "in": "query",
                        "description": "Include a flag indicating the canonical transcript for a gene",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ccds",
                        "in": "query",
                        "description": "Include CCDS transcript identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dbNSFP",
                        "in": "query",
                        "description": "Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See dbNSFP README for field list.[plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dbscSNV",
                        "in": "query",
                        "description": "Predictions for splicing variants from dbscSNV. [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domains",
                        "in": "query",
                        "description": "Include names of overlapping protein domains",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "hgvs",
                        "in": "query",
                        "description": "Include HGVS nomenclature based on Ensembl stable identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "merged",
                        "in": "query",
                        "description": "Use merged Ensembl and RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "miRNA",
                        "in": "query",
                        "description": "Determines where in the secondary structure of a miRNA a variant falls [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numbers",
                        "in": "query",
                        "description": "Include affected exon and intron positions within the transcript",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "protein",
                        "in": "query",
                        "description": "Include Ensembl protein identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "refseq",
                        "in": "query",
                        "description": "Use RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "xref_refseq",
                        "in": "query",
                        "description": "nclude aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "vep/{species}/id": {
            "post": {
                "description": "Fetch variant consequences for multiple ids.",
		"tags":["VEP"],
                "parameters": [
		    {
		        "in": "body",
            		"name": "body",
            		"description": "{ \"ids\" : array }",
            		"required": true,            		
                        "type": "string",
			"schema": {
				"type": "string",
				"properties":
				{
				"ids": {"type": "array"}

				},
				"example": "{ \"ids\" : [\"rs56116432\", \"COSM476\"] }"
				  }
		    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "Blosum62",
                        "in": "query",
                        "description": "Include BLOSUM62 amino acid conservation score [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "CSN",
                        "in": "query",
                        "description": "Reports Clinical Sequencing Nomenclature (CSN) for variants [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CSN.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Conservation",
                        "in": "query",
                        "description": "Retrieves a conservation score from the Ensembl Compara databases for variant positions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Conservation.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "GeneSplicer",
                        "in": "query",
                        "description": "Detects splice sites in genomic DNA [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "MaxEntScan",
                        "in": "query",
                        "description": "Sequence motif and maximum entropy based splice site consensus predictions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UpDownDistance",
                        "in": "query",
                        "description": "Change the distance to transcript for which VEP assigns upstream and downstream consequences [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/UpDownDistance.pm)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "canonical",
                        "in": "query",
                        "description": "Include a flag indicating the canonical transcript for a gene",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ccds",
                        "in": "query",
                        "description": "Include CCDS transcript identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dbNSFP",
                        "in": "query",
                        "description": "Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See dbNSFP README for field list.[plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dbscSNV",
                        "in": "query",
                        "description": "Predictions for splicing variants from dbscSNV. [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domains",
                        "in": "query",
                        "description": "Include names of overlapping protein domains",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "hgvs",
                        "in": "query",
                        "description": "Include HGVS nomenclature based on Ensembl stable identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "merged",
                        "in": "query",
                        "description": "Use merged Ensembl and RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "miRNA",
                        "in": "query",
                        "description": "Determines where in the secondary structure of a miRNA a variant falls [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numbers",
                        "in": "query",
                        "description": "Include affected exon and intron positions within the transcript",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "protein",
                        "in": "query",
                        "description": "Include Ensembl protein identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "refseq",
                        "in": "query",
                        "description": "Use RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "xref_refseq",
                        "in": "query",
                        "description": "nclude aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "vep/{species}/region/{region}/{allele}/": {
            "get": {
                "description": "Fetch variant consequences.",
		"tags":["VEP"],
                "parameters": [ 
                    {
                        "name": "allele",
                        "in": "path",
                        "description": "Variation allele",
                        "required": true,
                        "type": "string",
			"default": "C"
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Query region. We only support the current assembly",
                        "required": true,
                        "type": "string",
			"default": "9:22125503-22125502:1"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "Blosum62",
                        "in": "query",
                        "description": "Include BLOSUM62 amino acid conservation score [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "CSN",
                        "in": "query",
                        "description": "Reports Clinical Sequencing Nomenclature (CSN) for variants [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CSN.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Conservation",
                        "in": "query",
                        "description": "Retrieves a conservation score from the Ensembl Compara databases for variant positions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Conservation.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "GeneSplicer",
                        "in": "query",
                        "description": "Detects splice sites in genomic DNA [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "MaxEntScan",
                        "in": "query",
                        "description": "Sequence motif and maximum entropy based splice site consensus predictions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UpDownDistance",
                        "in": "query",
                        "description": "Change the distance to transcript for which VEP assigns upstream and downstream consequences [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/UpDownDistance.pm)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "canonical",
                        "in": "query",
                        "description": "Include a flag indicating the canonical transcript for a gene",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ccds",
                        "in": "query",
                        "description": "Include CCDS transcript identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dbNSFP",
                        "in": "query",
                        "description": "Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See dbNSFP README for field list.[plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dbscSNV",
                        "in": "query",
                        "description": "Predictions for splicing variants from dbscSNV. [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domains",
                        "in": "query",
                        "description": "Include names of overlapping protein domains",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "hgvs",
                        "in": "query",
                        "description": "Include HGVS nomenclature based on Ensembl stable identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "merged",
                        "in": "query",
                        "description": "Use merged Ensembl and RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "miRNA",
                        "in": "query",
                        "description": "Determines where in the secondary structure of a miRNA a variant falls [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numbers",
                        "in": "query",
                        "description": "Include affected exon and intron positions within the transcript",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "protein",
                        "in": "query",
                        "description": "Include Ensembl protein identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "refseq",
                        "in": "query",
                        "description": "Use RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "xref_refseq",
                        "in": "query",
                        "description": "nclude aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "vep/{species}/region": {
            "post": {
                "description": "Fetch variant consequences for multiple regions.",
		"tags":["VEP"],
                "parameters": [
		    {
		        "in": "body",
            		"name": "body",
            		"description": "{ \"variants\" : array }",
            		"required": true,            		
                        "type": "string",
			"schema": {
				"type": "string",
				"properties":
				{
				"variants": {"type": "array"}

				},
				"example": "{ \"variants\" : [\"21 26960070 rs116645811 G A . . .\", \"21 26965148 rs1135638 G A . . .\"] }"
				  }
		    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "Blosum62",
                        "in": "query",
                        "description": "Include BLOSUM62 amino acid conservation score [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "CSN",
                        "in": "query",
                        "description": "Reports Clinical Sequencing Nomenclature (CSN) for variants [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CSN.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Conservation",
                        "in": "query",
                        "description": "Retrieves a conservation score from the Ensembl Compara databases for variant positions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Conservation.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "GeneSplicer",
                        "in": "query",
                        "description": "Detects splice sites in genomic DNA [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "MaxEntScan",
                        "in": "query",
                        "description": "Sequence motif and maximum entropy based splice site consensus predictions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UpDownDistance",
                        "in": "query",
                        "description": "Change the distance to transcript for which VEP assigns upstream and downstream consequences [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/UpDownDistance.pm)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "canonical",
                        "in": "query",
                        "description": "Include a flag indicating the canonical transcript for a gene",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ccds",
                        "in": "query",
                        "description": "Include CCDS transcript identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dbNSFP",
                        "in": "query",
                        "description": "Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See dbNSFP README for field list.[plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dbscSNV",
                        "in": "query",
                        "description": "Predictions for splicing variants from dbscSNV. [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domains",
                        "in": "query",
                        "description": "Include names of overlapping protein domains",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "hgvs",
                        "in": "query",
                        "description": "Include HGVS nomenclature based on Ensembl stable identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "merged",
                        "in": "query",
                        "description": "Use merged Ensembl and RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "miRNA",
                        "in": "query",
                        "description": "Determines where in the secondary structure of a miRNA a variant falls [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numbers",
                        "in": "query",
                        "description": "Include affected exon and intron positions within the transcript",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "protein",
                        "in": "query",
                        "description": "Include Ensembl protein identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "refseq",
                        "in": "query",
                        "description": "Use RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "xref_refseq",
                        "in": "query",
                        "description": "nclude aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "vep/{species}/hgvs/{hgvs_notation}/": {
            "get": {
                "description": "Fetch variant consequences based on a HGVS notation.",
		"tags":["VEP"],
                "parameters": [ 
                    {
                        "name": "hgvs_notation",
                        "in": "path",
                        "description": "HGVS notation. May be genomic (g), coding (c) or protein (p), with reference to chromosome name, gene name, transcript ID or protein ID.",
                        "required": true,
                        "type": "string",
			"default": "AGT:c.803T>C"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "Blosum62",
                        "in": "query",
                        "description": "Include BLOSUM62 amino acid conservation score [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "CSN",
                        "in": "query",
                        "description": "Reports Clinical Sequencing Nomenclature (CSN) for variants [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CSN.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Conservation",
                        "in": "query",
                        "description": "Retrieves a conservation score from the Ensembl Compara databases for variant positions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Conservation.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "GeneSplicer",
                        "in": "query",
                        "description": "Detects splice sites in genomic DNA [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "MaxEntScan",
                        "in": "query",
                        "description": "Sequence motif and maximum entropy based splice site consensus predictions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UpDownDistance",
                        "in": "query",
                        "description": "Change the distance to transcript for which VEP assigns upstream and downstream consequences [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/UpDownDistance.pm)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "canonical",
                        "in": "query",
                        "description": "Include a flag indicating the canonical transcript for a gene",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ccds",
                        "in": "query",
                        "description": "Include CCDS transcript identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dbNSFP",
                        "in": "query",
                        "description": "Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See dbNSFP README for field list.[plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dbscSNV",
                        "in": "query",
                        "description": "Predictions for splicing variants from dbscSNV. [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domains",
                        "in": "query",
                        "description": "Include names of overlapping protein domains",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "hgvs",
                        "in": "query",
                        "description": "Include HGVS nomenclature based on Ensembl stable identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "merged",
                        "in": "query",
                        "description": "Use merged Ensembl and RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "miRNA",
                        "in": "query",
                        "description": "Determines where in the secondary structure of a miRNA a variant falls [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numbers",
                        "in": "query",
                        "description": "Include affected exon and intron positions within the transcript",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "protein",
                        "in": "query",
                        "description": "Include Ensembl protein identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "refseq",
                        "in": "query",
                        "description": "Use RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "xref_refseq",
                        "in": "query",
                        "description": "nclude aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "vep/{species}/hgvs": {
            "post": {
                "description": "Fetch variant consequences for multiple HGVS notations.",
		"tags":["VEP"],
                "parameters": [
		    {
		        "in": "body",
            		"name": "body",
            		"description": "{ \"hgvs_notations\" : array }",
            		"required": true,            		
                        "type": "string",
			"schema": {
				"type": "string",
				"properties":
				{
				"hgvs_notations": {"type": "array"}

				},
				"example": "{ \"hgvs_notations\" : [\"AGT:c.803T>C\", \"9:g.22125504G>C\"] }"
				  }
		    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
			"default": "human"
                    },
                    {
                        "name": "Blosum62",
                        "in": "query",
                        "description": "Include BLOSUM62 amino acid conservation score [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Blosum62.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "CSN",
                        "in": "query",
                        "description": "Reports Clinical Sequencing Nomenclature (CSN) for variants [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/CSN.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Conservation",
                        "in": "query",
                        "description": "Retrieves a conservation score from the Ensembl Compara databases for variant positions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/Conservation.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "GeneSplicer",
                        "in": "query",
                        "description": "Detects splice sites in genomic DNA [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/GeneSplicer.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "MaxEntScan",
                        "in": "query",
                        "description": "Sequence motif and maximum entropy based splice site consensus predictions [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/MaxEntScan.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UpDownDistance",
                        "in": "query",
                        "description": "Change the distance to transcript for which VEP assigns upstream and downstream consequences [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/UpDownDistance.pm)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "canonical",
                        "in": "query",
                        "description": "Include a flag indicating the canonical transcript for a gene",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ccds",
                        "in": "query",
                        "description": "Include CCDS transcript identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dbNSFP",
                        "in": "query",
                        "description": "Include fields from dbNSFP, a database of pathogenicity predictions for missense variants. Multiple fields should be separated by commas. See dbNSFP README for field list.[plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbNSFP.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dbscSNV",
                        "in": "query",
                        "description": "Predictions for splicing variants from dbscSNV. [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/dbscSNV.pm)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domains",
                        "in": "query",
                        "description": "Include names of overlapping protein domains",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "hgvs",
                        "in": "query",
                        "description": "Include HGVS nomenclature based on Ensembl stable identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "merged",
                        "in": "query",
                        "description": "Use merged Ensembl and RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "miRNA",
                        "in": "query",
                        "description": "Determines where in the secondary structure of a miRNA a variant falls [plugin details](https://raw.githubusercontent.com/ensembl-variation/VEP_plugins/master/miRNA.pm)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numbers",
                        "in": "query",
                        "description": "Include affected exon and intron positions within the transcript",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "protein",
                        "in": "query",
                        "description": "Include Ensembl protein identifiers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "refseq",
                        "in": "query",
                        "description": "Use RefSeq transcript set to report consequences (human only)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "xref_refseq",
                        "in": "query",
                        "description": "nclude aligned RefSeq mRNA identifiers for transcript. NB: theRefSeq and Ensembl transcripts aligned in this way MAY NOT, AND FREQUENTLY WILL NOT, match exactly in sequence, exon structure and protein product",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "variation/{species}/{id}": {
            "get": {
                "description": "Uses a variant identifier (e.g. rsID) to return the variation features including optional genotype, phenotype and population data.",
		"tags":["Variation"],
                "parameters": [ 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An Ensembl stable ID",
                        "required": true,
                        "type": "string",
			"default": "rs56116432"
                    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
                        "default": "human"
                    },    
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "genotypes",
                        "in": "query",
                        "description": "Include individual genotypes",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "phenotypes",
                        "in": "query",
                        "description": "Include phenotypes.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pops",
                        "in": "query",
                        "description": "Include population allele frequencies",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "population",
                        "in": "query",
                        "description": "Include population genotype frequencies",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        },
        "variation/{species}": {
            "post": {
                "description": "Uses a list of variant identifiers (e.g. rsID) to return the variation features including optional genotype, phenotype and population data.",
		"tags":["Variation"],
                "parameters": [
		    {
		        "in": "body",
            		"name": "body",
            		"description": "{ \"ids\" : array }",
            		"required": true,            		
                        "type": "string",
			"schema": {
				"type": "string",
				"properties":
				{
				"ids": {"type": "array"}

				},
				"example": "{ \"ids\" : [\"rs56116432\", \"COSM476\"] }"
				  }
		    },
                    {
                        "name": "species",
                        "in": "path",
                        "description": "Species name/alias",
                        "required": true,
                        "type": "string",
                        "default": "human"
                    },    
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Name of the callback subroutine to be returned by the requested JSONP response. Required ONLY when using JSONP as the serialisation method. Please see the [user guide](http://github.com/Ensembl/ensembl-rest/wiki).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "genotypes",
                        "in": "query",
                        "description": "Include individual genotypes",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "phenotypes",
                        "in": "query",
                        "description": "Include phenotypes.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pops",
                        "in": "query",
                        "description": "Include population allele frequencies",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "population",
                        "in": "query",
                        "description": "Include population genotype frequencies",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "content-type",
                        "in": "query",
                        "description": "Response formats",
                        "required": false,
                        "type": "string",
                        "enum": ["application/json","text/javascript","text/xml"]
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description":"successful operation"
                    }
                }
            }
        }
        
    
    
    
    },    
    "definitions":{
	"OntologyName": {
	      "type": "object",
	      "properties":
	      {
	      "name": {"type":"string"}
	      },
	      "example": {"name": "transcription factor complex"}
	}
    }
}
	
	